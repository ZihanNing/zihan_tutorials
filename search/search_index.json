{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>This is Zihan\u2019s tutorial hub.</p> <ul> <li>\ud83d\udc49 Head to Tutorials to browse all guides.</li> <li>New here? Start with First steps.</li> </ul> <p>Tips: Use the left sidebar to navigate. Each tutorial is 10\u201315 minutes.</p>"},{"location":"SOP/MkDocs/","title":"MkDocs \u8f7b\u677e\u5199\u535a\u5ba2","text":"<p>\u8fd9\u4e00\u7bc7\u6765\u66f4\u65b0\u5173\u4e8e\u6211\u7684\u4e2a\u4eba\u4e3b\u9875\u4e2d\uff0c\u5982\u4f55\u521b\u5efa tutorials \u76f8\u5173\u754c\u9762\uff01</p> <p>\u5728\u4e2a\u4eba\u4e3b\u9875\u4e2d\uff0c\u6211\u5bf9\u4e8e tutorials \u8fd9\u4e2a\u90e8\u5206\u7684\u8981\u6c42\u662f:</p> <ol> <li>\u8fd9\u4e2a\u90e8\u5206\u6211\u9700\u8981\u7ecf\u5e38\u66f4\u65b0\uff0c\u56e0\u6b64\u6211\u4e0d\u80fd\u4f7f\u7528\u50cf docusaurus \u90a3\u6837\u7ecf\u5e38\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u7684\u5de5\u5177</li> <li>\u8fd9\u4e2a\u535a\u5ba2\u9875\u9762\u6700\u597d\u7b80\u6d01\uff0c\u4e0d\u9700\u8981\u592a\u82b1\u54e8\uff0c\u6709\u5fc5\u8981\u7684\u5bfc\u822a\u680f\u548c\u68c0\u7d22\u5de5\u5177</li> <li>\u5728 github \u4e0a\u9762\u80fd\u591f\u66f4\u65b0\u8fc5\u901f</li> <li>\u8f7b\u91cf\u5316\uff0c\u4e0d\u9700\u8981\u592a\u591a\u7f16\u7a0b\uff0c\u4e13\u6ce8\u4e8e\u6587\u5b57</li> </ol> <p>\u5728\u5bfb\u627e\u4e86\u597d\u51e0\u4e2a\u5de5\u5177\u540e\uff0c\u6700\u7ec8\u6211\u9009\u62e9\u4e86 MkDocs\uff0c\u56e0\u4e3a\u5176\u7b26\u5408\u6211\u4e0a\u8ff0\u6240\u6709\u7684\u9700\u6c42\u3002\u63a5\u4e0b\u6765\uff0c\u5c31\u662f\u6211\u7684 MkDocs \u914d\u7f6e\u6559\u7a0b\u548c\u4f7f\u7528\u624b\u518c\uff01</p>"},{"location":"SOP/MkDocs/#1-mac-mkdocs","title":"1. \u5728 Mac \u4e0a\u914d\u7f6e MkDocs","text":"<p>\uff081\uff09\u5b89\u88c5 Python &amp; MkDocs</p> <p>\u5982\u679c\u7cfb\u7edf\u6ca1 Python3\uff0c\u5148\u5b89\u88c5 Homebrew\uff1a</p> <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> <p>\u5b89\u88c5 Python3 \u4e0e pip\uff1a</p> <pre><code>brew install python3\n</code></pre> <p>\u5b89\u88c5 MkDocs\uff1a</p> <pre><code>pip install mkdocs\n</code></pre> <p>\u63a8\u8350\u4f7f\u7528 Material \u4e3b\u9898\uff08\u6700\u5e38\u89c1\u4e14\u597d\u770b\uff09\uff1a</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>\uff082\uff09\u521b\u5efa\u7b2c\u4e00\u4e2a MkDocs \u6587\u6863</p> <p>\u8fdb\u5165\u4e00\u4e2a\u4f60\u51c6\u5907\u5199 blog \u7684\u6587\u4ef6\u5939\uff1a</p> <pre><code>mkdocs new my-blog\ncd my-blog\n</code></pre> <p>\u6b64\u65f6\u4f1a\u751f\u6210\u4e00\u4e2a\u6700\u57fa\u7840\u7684\u7ed3\u6784\uff1a</p> <pre><code>my-blog/\n  mkdocs.yml      # \u914d\u7f6e\u6587\u4ef6\n  docs/\n    index.md      # \u9996\u9875\u5185\u5bb9\n</code></pre> <p>\uff083\uff09\u672c\u5730\u9884\u89c8\u529f\u80fd</p> <p>\u5728\u6839\u76ee\u5f55\u4e0b\u8fd0\u884c\uff1a</p> <pre><code>mkdocs serve\n</code></pre> <p>\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee <code>http://127.0.0.1:8000</code> \u5373\u53ef\u5b9e\u65f6\u9884\u89c8\u3002</p> <p>\uff084\uff09\u4e0a\u4f20\u5230 GitHub \u5e76\u542f\u7528 GitHub Pages</p> <p>\u521d\u59cb\u5316 Git\uff1a</p> <pre><code>git init\ngit add .\ngit commit -m \"first mkdocs blog\"\ngit branch -M main\ngit remote add origin git@github.com:ZihanNing/my-blog.git\n</code></pre> <p>\u90e8\u7f72\u5230 GitHub Pages\uff1a</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>\u90e8\u7f72\u540e\uff0cGitHub Pages \u4f1a\u81ea\u52a8\u751f\u6210\u5e76\u6258\u7ba1\u7f51\u7ad9\u3002\u4f60\u53ef\u4ee5\u5728\u4ed3\u5e93\u7684 Settings \u2192 Pages \u91cc\u786e\u8ba4\u53d1\u5e03\u5730\u5740\u3002\u6bcf\u6b21\u66f4\u65b0\u540e\uff0c\u53ea\u8981\u8fd0\u884c <code>mkdocs gh-deploy</code> \u5c31\u80fd\u7acb\u5373\u4e0a\u7ebf\uff0c\u975e\u5e38\u8f7b\u91cf\u3002</p>"},{"location":"SOP/MkDocs/#2-mkdocs","title":"2. \u5728 MkDocs \u4e2d\u52a0\u5165\u68c0\u7d22\u548c\u4e2d/\u82f1\u5207\u6362\u6309\u94ae","text":"<p>\uff081\uff09\u68c0\u7d22\u529f\u80fd</p> <p>Material \u4e3b\u9898\u81ea\u5e26\u68c0\u7d22\u529f\u80fd\u3002\u786e\u4fdd <code>mkdocs.yml</code> \u4e2d\u6709\uff1a</p> <pre><code>plugins:\n  - search\n</code></pre> <p>\u8fd9\u6837\u5373\u53ef\u5728\u53f3\u4e0a\u89d2\u751f\u6210\u641c\u7d22\u6846\u3002</p> <p>\uff082\uff09\u591a\u8bed\u8a00\u5207\u6362\uff08i18n \u63d2\u4ef6\uff09</p> <p>\u5b89\u88c5\u63d2\u4ef6\uff1a</p> <pre><code>pip install mkdocs-static-i18n\n</code></pre> <p>\u914d\u7f6e <code>mkdocs.yml</code>\uff1a</p> <pre><code>plugins:\n  - search\n  - i18n:\n      docs_structure: suffix\n      reconfigure_material: true        # \u542f\u7528 Material \u7684\u8bed\u8a00\u5207\u6362\n      fallback_to_default: true         # \u6ca1\u6709\u7ffb\u8bd1\u65f6\u663e\u793a\u4e2d\u6587\n      languages:\n        - locale: zh\n          name: \u4e2d\u6587\n          default: true\n        - locale: en\n          name: English\n</code></pre> <p>\u7136\u540e\u5728 <code>docs/</code> \u4e0b\u5206\u522b\u521b\u5efa\uff1a</p> <pre><code>index.zh.md\nindex.en.md\n</code></pre> <p>\u8bbf\u95ee\u9875\u9762\u65f6\uff0c\u53f3\u4e0a\u89d2\u4f1a\u81ea\u52a8\u51fa\u73b0\u8bed\u8a00\u5207\u6362\u6309\u94ae\uff08\u4e2d\u6587/English\uff09\uff0c\u53ef\u4ee5\u81ea\u7531\u5207\u6362\u3002</p> <p>\u2728 \u5230\u8fd9\u91cc\uff0c\u4e00\u4e2a\u652f\u6301\u4e2d\u82f1\u6587\u5207\u6362 + \u641c\u7d22\u529f\u80fd\u7684 \u8f7b\u91cf\u7ea7\u4e2a\u4eba\u535a\u5ba2\u6559\u7a0b\u7cfb\u7edf \u5c31\u5b8c\u6210\u4e86\u3002 \u4ee5\u540e\u8981\u66f4\u65b0\uff0c\u53ea\u9700\u8981\u5728 <code>docs/</code> \u6587\u4ef6\u5939\u91cc\u5199\u65b0\u7684 markdown \u6587\u4ef6\uff0c\u7136\u540e\u4e00\u884c\u547d\u4ee4\uff1a</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>\u5c31\u80fd\u5feb\u901f\u66f4\u65b0 GitHub Pages\u3002</p>"},{"location":"SOP/MkDocs/#3","title":"3. \u5e38\u7528\u64cd\u4f5c\u6e05\u5355","text":""},{"location":"SOP/MkDocs/#a","title":"A. \u65b0\u589e\u6587\u7ae0","text":"<ol> <li>\u5728 <code>docs/</code> \u6587\u4ef6\u5939\u4e2d\u65b0\u5efa Markdown \u6587\u4ef6\uff1a</li> </ol> <p><pre><code>touch docs/tutorial1.zh.md\ntouch docs/tutorial1.en.md\n</code></pre> 2. \u5728 <code>mkdocs.yml</code> \u7684 <code>nav</code> \u4e2d\u6dfb\u52a0\uff1a</p> <p><pre><code>nav:\n  - Home: index.md\n  - Tutorials:\n      - \u6559\u7a0b\u4e00: tutorial1.zh.md\n      - Tutorial 1: tutorial1.en.md\n</code></pre> 3. \u4fdd\u5b58\u540e\u5373\u53ef\u9884\u89c8\u6216\u53d1\u5e03\u3002</p>"},{"location":"SOP/MkDocs/#b","title":"B. \u672c\u5730\u8c03\u8bd5","text":"<p>\u26a0\ufe0f \u5982\u679c MkDocs/\u63d2\u4ef6\u5b89\u88c5\u5728 <code>.venv</code> \u4e2d\uff0c\u5fc5\u987b\u5148\u8fdb\u5165\u865a\u62df\u73af\u5883\u3002</p> <ol> <li>\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff1a</li> </ol> <p><pre><code>source .venv/bin/activate\n</code></pre> 2. \u672c\u5730\u9884\u89c8\uff1a</p> <p><pre><code>mkdocs serve\n</code></pre> 3. \u6253\u5f00 <code>http://127.0.0.1:8000</code>\u3002</p> <p>\u9000\u51fa\u865a\u62df\u73af\u5883\uff1a</p> <pre><code>deactivate\n</code></pre>"},{"location":"SOP/MkDocs/#c","title":"C. \u4e00\u952e\u53d1\u5e03","text":"<ol> <li>\u6fc0\u6d3b <code>.venv</code>\uff08\u5982\u679c\u4f7f\u7528\uff09\uff1a</li> </ol> <p><pre><code>source .venv/bin/activate\n</code></pre> 2. \u53d1\u5e03\uff1a</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>\u51e0\u79d2\u949f\u540e GitHub Pages \u5373\u66f4\u65b0\u3002</p>"},{"location":"SOP/MkDocs/#d","title":"D. \u5206\u652f\u5de5\u4f5c\u6d41\u90e8\u7f72","text":"<p>\u5982\u679c\u5728\u529f\u80fd\u5206\u652f\u5f00\u53d1\uff08\u5982 <code>docs/bloch_simulation</code>\uff09\uff1a</p> <ol> <li>\u5728\u5206\u652f\u63d0\u4ea4\uff1a</li> </ol> <p><pre><code>git checkout docs/bloch_simulation\ngit add .\ngit commit -m \"update bloch simulation docs\"\ngit push origin docs/bloch_simulation\n</code></pre> 2. \u5408\u5e76\u5230 main\uff1a</p> <p><pre><code>git checkout main\ngit pull origin main\ngit merge docs/bloch_simulation\ngit push origin main\n</code></pre> 3. \u4ece main \u90e8\u7f72\uff1a</p> <pre><code>mkdocs gh-deploy\n</code></pre>"},{"location":"SOP/MkDocs/#e","title":"E. \u90e8\u7f72\u95ee\u9898\u6392\u67e5","text":"<p>\u5982\u679c\u770b\u5230 \u274c GitHub Actions \u5931\u8d25\uff08\u800c <code>gh-deploy</code> \u6210\u529f\uff09\uff1a</p> <ol> <li>\u67e5\u770b\u5de5\u4f5c\u6d41\u6587\u4ef6\uff1a</li> </ol> <p><pre><code>ls -R .github/workflows\n</code></pre> 2. \u5220\u9664\u591a\u4f59\u7684\u90e8\u7f72\u5de5\u4f5c\u6d41\uff1a</p> <p><pre><code>git rm .github/workflows/&lt;filename&gt;.yml\ngit commit -m \"remove GitHub Actions deploy workflow\"\ngit push origin main\n</code></pre> 3. \u786e\u8ba4 Settings \u2192 Pages \u2192 Source \u8bbe\u7f6e\u4e3a <code>gh-pages</code>\u3002 4. \u518d\u6b21\u90e8\u7f72\uff1a</p> <pre><code>mkdocs gh-deploy\n</code></pre>"},{"location":"SOP/tmux/","title":"\ud83d\udda5\ufe0f tmux \u2013 \u8ba9 terminal \u8131\u79bb\u7b14\u7535\u4e5f\u80fd\u7ee7\u7eed\u8dd1 \ud83d\ude80","text":""},{"location":"SOP/tmux/#_1","title":"\u9002\u7528\u573a\u666f \ud83c\udf1f","text":"<p>\u5982\u679c\u4f60\u7ecf\u5e38\u9700\u8981\uff1a</p> <ul> <li>\u5728 \u8fdc\u7a0b\u670d\u52a1\u5668 \u4e0a\u8dd1\u4e00\u4e9b \u957f\u671f\u4efb\u52a1\uff08\u6bd4\u5982\u8bad\u7ec3\u6a21\u578b\u3001\u8dd1\u4eff\u771f\u3001\u8dd1 Gadgetron client\uff09\uff1b</li> <li>\u62c5\u5fc3 \u7b14\u8bb0\u672c\u65ad\u7f51/\u4f11\u7720/\u5173\u6389 SSH \u5c31\u5bfc\u81f4\u7a0b\u5e8f\u88ab\u6740\u6389\uff1b</li> <li>\u60f3\u968f\u65f6 detach \u548c re-attach\uff0c\u5728\u4e0d\u540c\u5730\u65b9\u7ee7\u7eed\u5de5\u4f5c\uff1b</li> </ul> <p>\u90a3\u4f60\u5c31\u4e00\u5b9a\u8981\u8bd5\u8bd5 tmux\uff01\u5b83\u80fd\u5e2e\u4f60\u628a\u4efb\u52a1\u6302\u5728\u540e\u53f0\uff0c\u50cf\u5f00\u4e86\u4e2a\u201c\u865a\u62df\u5c4f\u5e55\u201d\u4e00\u6837\u968f\u65f6\u8fdb\u5165/\u9000\u51fa\u3002</p>"},{"location":"SOP/tmux/#_2","title":"\u80cc\u666f","text":"<p>\u6211\u5e73\u65f6\u8d1f\u8d23\u533b\u9662\u91cc inline reconstruction \u5e73\u53f0\u7684\u7ef4\u62a4\u5de5\u4f5c\uff0c\u76ee\u524d\u4e3b\u8981\u57fa\u4e8e Gadgetron \u642d\u5efa\u3002\u6211\u4eec\u5728\u8fd9\u4e2a\u5e73\u53f0\u4e0a\u5f00\u53d1\u548c\u79fb\u690d\u4e86\u4e0d\u5c11\u91cd\u5efa\u7b97\u6cd5\uff08\u8be6\u89c1 \u6211\u7684\u6846\u67b6\u4ecb\u7ecd\uff09\u3002\u5176\u4e2d\uff0chead motion correction \u91cd\u5efa\u7b97\u6cd5\u4f1a\u5728 TwinsUK Project \u7684\u626b\u63cf\u4e2d\u5b9a\u671f\u4f7f\u7528\uff08\u57fa\u672c\u4e0a\u6bcf\u5468\u4e09\u3001\u56db\uff0c\u5927\u7ea6 16 \u4eba\u6b21\uff09\u3002</p> <p>\u4e3a\u4e86\u4fdd\u8bc1\u5e73\u53f0\u7a33\u5b9a\u8fd0\u884c\uff0c\u7ef4\u62a4\u4eba\u5458\u9700\u8981\u505a\u5230\u4e24\u70b9\uff1a</p> <ul> <li>\u2705 \u786e\u4fdd Gadgetron client \u6bcf\u5468\u5728 server \u4e0a\u88ab\u6b63\u786e\u6fc0\u6d3b</li> <li>\u2705 \u80fd\u968f\u65f6\u8fdc\u7a0b\u8bfb\u53d6 Gadgetron server log</li> </ul> <p>\u95ee\u9898\u662f\uff1a\u6211\u7ecf\u5e38\u9700\u8981\u8fdc\u7a0b\u529e\u516c\u3002\u6240\u4ee5\uff0c\u600e\u4e48\u4fdd\u8bc1 client \u6301\u7eed\u8fd0\u884c \u4e14 \u6211\u65ad\u5f00 SSH \u540e\u4e0d\u53d7\u5f71\u54cd\uff1f\u7b54\u6848\u5c31\u662f\uff1atmux\uff01</p>"},{"location":"SOP/tmux/#step-1-gadgetron-server","title":"Step 1. \u4ece\u672c\u5730\u7535\u8111\u767b\u5f55 Gadgetron server","text":"<p>\u7531\u4e8e server \u5728\u533b\u9662\u5185\u7f51\uff0c\u4e0d\u80fd\u76f4\u63a5 SSH\uff0c\u9700\u8981\u5148\u901a\u8fc7 bouncer \u4f5c\u4e3a\u8df3\u677f\u673a\u3002</p> <p>\u5148\u5728\u672c\u5730\uff08Macbook Air\uff09\u6253\u5f00 terminal\uff0c\u8f93\u5165\uff1a</p> <pre><code>ssh -L 4003:&lt;gadgetron_server_ID&gt;:4000 &lt;user&gt;@bouncer.&lt;bouncer_address&gt;\n</code></pre> <ul> <li><code>-L</code> \u7528\u4e8e\u7aef\u53e3\u8f6c\u53d1\uff0c\u8fd9\u91cc\u662f\u628a\u672c\u5730\u7684 4003 \u7aef\u53e3\u6620\u5c04\u5230\u5185\u7f51 Gadgetron server \u7684 4000 \u7aef\u53e3\u3002</li> </ul> <p>\u8fdb\u5165 bouncer \u540e\uff0c\u518d\u8df3\u8f6c\u5230 Gadgetron server\uff1a</p> <pre><code>ssh gadgetron@&lt;gadgetron_server_ID&gt;\n</code></pre>"},{"location":"SOP/tmux/#step-2-server-tmux-gadgetron-client","title":"Step 2. \u5728 server \u4e0a\u7528 tmux \u5f00\u542f gadgetron client","text":"<p>\u5982\u679c\u76f4\u63a5\u5728 SSH session \u91cc\u8dd1 client\uff0c\u4e00\u65e6\u5173\u95ed\u7b14\u7535\u7ec8\u7aef\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u4e2d\u65ad\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u7528 tmux \u5f00\u542f\u4e00\u4e2a\u72ec\u7acb\u7684\u201c\u6301\u4e45\u5316\u7ec8\u7aef\u201d\u3002</p> <p>\u65b0\u5efa\u4e00\u4e2a tmux \u4f1a\u8bdd\uff08<code>-s</code> \u540e\u9762\u662f\u7ed9\u4f1a\u8bdd\u8d77\u7684\u540d\u5b57\uff0c\u6bd4\u5982 <code>gadgetron_client</code>\uff09\uff1a</p> <pre><code>tmux new -s &lt;the_name_of_terminal&gt;\n</code></pre> <p>\u8fdb\u5165\u4f1a\u8bdd\u540e\uff0c\u5c31\u53ef\u4ee5\u542f\u52a8 Gadgetron client\uff08\u8fd9\u91cc\u7528\u7684\u662f\u6211\u5199\u7684\u811a\u672c\uff09\uff1a</p> <pre><code>./activate_gadgetron.sh\n</code></pre> <p>\ud83d\udc49 \u8fd9\u4e2a\u811a\u672c\u4f1a\u5728 9002 \u7aef\u53e3\u4e0a\u542f\u52a8 Gadgetron client\uff0c\u4fdd\u6301\u8fd0\u884c\u72b6\u6001\u3002</p> <p>\u5982\u679c\u60f3\u8ba9 tmux \u4f1a\u8bdd\u5728\u540e\u53f0\u7ee7\u7eed\u8dd1\uff0c\u53ea\u9700 detach\uff1a</p> <pre><code>Ctrl+b \u7136\u540e\u6309 d\n</code></pre> <p>\u8fd9\u6837\u5373\u4f7f\u4f60\u5173\u6389 Macbook \u7684 SSH \u7ec8\u7aef\uff0cclient \u4e5f\u4e0d\u4f1a\u88ab\u6740\u6389\u3002</p>"},{"location":"SOP/tmux/#step-3-tmux","title":"Step 3. \u91cd\u65b0\u8fdb\u5165 tmux \u4f1a\u8bdd","text":"<p>\u5f53\u4f60\u4e0b\u6b21\u60f3\u67e5\u770b log \u6216\u786e\u8ba4 client \u72b6\u6001\u65f6\uff0c\u53ef\u4ee5\u91cd\u65b0 attach \u56de\u53bb\uff1a</p> <pre><code>tmux attach -t &lt;the_name_of_terminal&gt;\n</code></pre> <p>\u5982\u679c\u5fd8\u4e86\u4f1a\u8bdd\u540d\uff0c\u53ef\u4ee5\u5148\u5217\u51fa\u6240\u6709 tmux \u4f1a\u8bdd\uff1a</p> <pre><code>tmux ls\n</code></pre>"},{"location":"SOP/tmux/#_3","title":"\u26a1 \u5e38\u89c1\u5751 &amp; \u5c0f\u8d34\u58eb","text":"<ul> <li> <p>\u4f1a\u8bdd\u5fd8\u8bb0\u540d\u5b57\uff1f   \u7528 <code>tmux ls</code> \u67e5\u4e00\u4e0b\u3002</p> </li> <li> <p>\u4f1a\u8bdd\u6302\u6389\u4e86\uff1f   \u6709\u65f6\u5019\u811a\u672c\u8dd1\u6302\u4e86\uff0c\u4f1a\u8bdd\u8fd8\u5728\u3002\u53ef\u4ee5\u5148\u9000\u51fa\uff1a</p> </li> </ul> <pre><code>tmux kill-session -t &lt;the_name_of_terminal&gt;\n</code></pre> <p>\u7136\u540e\u91cd\u65b0\u5f00\u4e00\u4e2a\u3002</p> <ul> <li> <p>\u5f00\u592a\u591a\u4f1a\u8bdd\uff1f   \u6ce8\u610f <code>tmux ls</code> \u4f1a\u5217\u51fa\u6765\u6240\u6709\u4f1a\u8bdd\uff0c\u4fdd\u6301\u5e72\u51c0\u6709\u5e8f\u6bd4\u8f83\u597d\u7ef4\u62a4\u3002</p> </li> <li> <p>\u7aef\u53e3\u51b2\u7a81\uff1f   \u5982\u679c Gadgetron client \u542f\u52a8\u65f6 9002 \u5df2\u7ecf\u88ab\u5360\u7528\uff0c\u53ef\u4ee5\u7528 <code>lsof -i:9002</code> \u67e5\u770b\u5360\u7528\u8fdb\u7a0b\u5e76\u7ed3\u675f\u5b83\u3002</p> </li> <li> <p>\u65e5\u5fd7\u5feb\u901f\u67e5\u770b \ud83d\udcdc   \u60f3\u5b9e\u65f6\u76ef\u65e5\u5fd7\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728 tmux \u91cc\u8dd1\uff1a</p> </li> </ul> <pre><code>tail -f log/subcall_log_xxx.txt\n</code></pre> <p>\u8fd9\u6837\u5c31\u4e0d\u7528\u6bcf\u6b21\u65b0\u5f00\u7a97\u53e3\u4e86\u3002</p>"},{"location":"SOP/tmux/#_4","title":"\ud83c\udf89 \u603b\u7ed3","text":"<p>\u5229\u7528 <code>tmux</code>\uff0c\u6211\u5c31\u80fd\u5728\u8fdc\u7a0b server \u4e0a\u6302\u4e00\u4e2a \u957f\u671f\u8fd0\u884c\u7684 gadgetron client\uff0c\u800c\u4e0d\u7528\u62c5\u5fc3\u5173\u6389 SSH \u6216\u7b14\u8bb0\u672c\u4f11\u7720\u540e\u8fdb\u7a0b\u88ab\u4e2d\u65ad\u3002</p> <p>\u8fd9\u6837\u4e00\u6765\uff0c\u6211\u5c31\u53ef\u4ee5\u5b89\u5fc3 WFH\uff0c\u540c\u65f6\u4fdd\u6301 TwinsUK Project \u7684 inline reconstruction \u5e73\u53f0 \u7a33\u5b9a\u8fd0\u884c\uff01\ud83d\udcaa</p>"},{"location":"bloch_simulation/1-basic_bloch_equ/","title":"1. Basic Bloch Equation","text":""},{"location":"bloch_simulation/1-basic_bloch_equ/","title":"1. Basic Bloch Equation","text":"<p>Thanks very much for the RAD 229 for providing the slides and basic Matlab functions for this summarized tutorials!</p> <p>In this tutorial series, you'll learn how to use Bloch simulation to model the MR signal by applying various components (e.g., RF pulses, gradients, etc.). This forms the foundation of MR imaging and MRS, providing insight into how the signal is generated and evolves.</p> <p>The standard bloch equation: </p> <p>In the following sections, we use the matrix form of the equation to simplify calculations, especially when using MATLAB. </p>"},{"location":"bloch_simulation/2-bloch_sim_comp/","title":"2. Bloch Simulation (Components)","text":"<p>In this section, you will learn the expressions of various components (i.e., relaxation, RF rotation, gradient rotation, etc.) as they apply to magnetization, and how to compute their effects.</p> <p>All embedded code could be found in: ZN_branch modified based on MRSignalSeqs</p> <p>Summarized list - Relaxation: relax.m - RF Rotation (B1 along positive x-axis): xrot.m - RF Rotation (B1 along positive y-axis): yrot.m - RF Rotation (flexible B1): throt.m - Gradient Rotation: zrot.m - Perfect Spoiler: set \\(M_x\\) and \\(M_y\\) as zero - Propagation: abprop.m - Real &amp; Complex form: mr2mc.m and mc2mr.m</p>"},{"location":"bloch_simulation/2-bloch_sim_comp/#21-relaxation","title":"2.1 Relaxation","text":"<p> refer to: relaxation bloch function</p>"},{"location":"bloch_simulation/2-bloch_sim_comp/#22-rf-rotation","title":"2.2 RF Rotation","text":"<p>Given the flip angle \\(\\alpha\\) and phase \\(\\theta\\) (the angle between B1 direction and positive x-axis) of the RF pulse To note: the flip obeys the left-handed rule </p> <p>Here, we expect the B1 field only applied on the xy-plane. For any imperfections (components on z direction), taking it as 'Gradient Rotation' (see below 2.3)</p> <p>Three functions for RF rotation simulation:  </p> <ul> <li>xrot: B1 along the positive x-axis (\\(\\theta = 0^o\\)), for xrot(90), the M will be flipped to positive y-axis (left-handed rule) xrot function</li> <li>yrot: B1 along the positive y-axis (\\(\\theta = 90^o\\)), for yrot(90), the M will be flipped to negative x-axis (left-handed rule) yrot function </li> <li> <p>throt: for B1 with flexible directions on xy-plane throt function</p> <p>xrot and yrot are special cases of throt (\\(\\theta = 0^o\\) and \\(90^o\\)), respectively</p> <p></p> </li> </ul>"},{"location":"bloch_simulation/2-bloch_sim_comp/#23-gradient-rotation","title":"2.3 Gradient Rotation","text":"<p>There are three ways to cause the gradient rotation:</p> <ol> <li>Add gradient \\(G\\)</li> <li>B0 field inhomogeneity \\(\\Delta B_0\\)</li> <li>B1 field imperfection (off-resonance) \\(\\Delta \\omega = \\omega_{RF} - \\omega_0\\)</li> </ol> <p>To note: the phase difference caused by the gradient \\(G\\) is: \\(\\phi_G(r) = -\\gamma \\int^\\tau_0 G(r,t)r dt\\) Especially, for the linear gradient: \\(\\phi_G(r) = -\\gamma G* \\tau * r\\)</p> <p>Therefore, the overall gradient rotation (phase) angle is: \\(\\theta = (\\gamma G* r+\\gamma \\Delta B_0 + \\Delta \\omega)\\tau\\)</p> <p>Actually, this phase difference is called the 'angle', since it is the angle between the actual rotating frequency to the rotating frame based on \\(\\omega_0 = \\gamma B_0\\), which means the new/actual rotating frame rotate faster/slower: \\(\\omega_{new} = \\omega_0+\\frac{\\theta}{\\tau}\\)</p> <p> (see zrot function)</p>"},{"location":"bloch_simulation/2-bloch_sim_comp/#24-perfect-spoiler","title":"2.4 Perfect Spoiler","text":"<p>A perfect spoiler refers to a result that can be achieved through various methods (e.g., RF spoiling or gradient spoiling), all leading to the same outcome: complete elimination of transverse magnetization.</p> <p>Gradient Spoiler: To achieve complete spoiling, the phase difference between different positions \\(r\\) must exceed \\(2\\pi\\) (i.e., \\(\\phi(r) = \\gamma G r \\tau &gt;&gt; 2\\pi\\)), so that the transverse magnetization vectors \\(M_{xy}(r)\\) at different locations cancel each other out, resulting in a net transverse magnetization of zero. RF Spoiler: This technique is commonly used in SPGR (T1-FLASH) sequences. It involves varying the phase of each excitation RF pulse in the GRE sequence (RF phase cycling) so that the transverse magnetization vector \\(M_{xy}(r)\\) within each TR (\\(TR_n\\)) accumulates to zero. To achieve effective spoiling, the phase difference between consecutive RF pulses is typically set to 117\u00b0, 137\u00b0, or 111.246\u00b0.</p> <p>However, as mentioned, whatever which method has been applied, the simulation of the perfect spoiler is the same: to set the \\(M_x\\) and \\(M_y\\) all as 0. </p> <pre><code>M(1:2,:)=0;             % Perfect spoiler\n</code></pre> <p></p>"},{"location":"bloch_simulation/2-bloch_sim_comp/#25-propagation","title":"2.5 Propagation","text":"<p>When multiple components (e.g., gradient rotation, relaxation, etc.) are applied over time, their combined effect can be represented by a single computation matrix applied to \\(M\\) all at once. This process is referred to as propagation.</p>"},{"location":"bloch_simulation/2-bloch_sim_comp/#3x3-matrix-propagation","title":"3x3 matrix propagation","text":"<p>With this settings:</p> <ul> <li>net magnetization: \\(M=[M_x, M_y, M_z]\\)  </li> <li>A is a 3x3 matrix, which could represent the changes inducted by RF rotation, gradient rotation, T2 relaxation, and part of T1 relaxation  </li> <li>B is a 1x3 matrix, which only included the changes caused by part of T1 relaxation</li> </ul> <p></p> <p>Then the principle of propagation is: </p> <p></p>"},{"location":"bloch_simulation/2-bloch_sim_comp/#4x4-matrix-propagation","title":"4x4 matrix propagation","text":"<p>To simplify the propagation, matrices A and B can be combined into a single 4\u00d74 matrix, allowing the propagation to be performed with a single matrix multiplication.</p> <p>. </p> <p>There's a mistake within this pic: the B matrix should be \\(B_{1x3}\\) instead of \\(B_{3x3}\\)</p> <p>For Matlab compuatation, see abprop.m</p> <p></p>"},{"location":"bloch_simulation/2-bloch_sim_comp/#order-of-propagation","title":"Order of propagation","text":"<p>When different components are applied over time, those applied earlier are closer to \\(M_0\\) in the computation sequence. However, the order of applying relaxation and gradient rotation matrices can be reversed without affecting the result, whereas RF rotation cannot be interchanged with any other computation matrix: \\(\\text{xrot} \\times \\text{relaxation} \\ne \\text{relaxation} \\times \\text{xrot}\\).</p> <p>This leads to a tricky case: what happens when RF rotation, gradient rotation, and relaxation occur simultaneously? For example, during slice-selective excitation. (For details, see Section 3, Case D.)</p> <p></p>"},{"location":"bloch_simulation/2-bloch_sim_comp/#26-complex-representation","title":"2.6 Complex Representation","text":"<p>Sometimes, for easier representation of phase and magnitude, we turn real representation of magnetization into complex form: - Real: \\(M = [M_x, M_y, M_z]\\) - Complex: \\(M = [M_{xy}, M_{xy}^*, M_z]\\), in which \\(M_{xy} = M_x + iM_y\\)</p> <p>Therefore, the translation between this real \\(M_r\\) and complex \\(M_c\\) form is (refer to mr2mc and mc2mr):</p> <p></p>"},{"location":"bloch_simulation/3-bloch_sim_demos/","title":"2. Bloch Simulation (Demos/Examples)","text":""},{"location":"en/SOP/MkDocs/","title":"Writing a Blog with MkDocs","text":"<p>This post is about how I created the tutorials section on my personal homepage!</p> <p>For this part of my homepage, my requirements are:</p> <ol> <li>I need to update it frequently, so I can\u2019t use a tool like Docusaurus that requires frequent recompilation.</li> <li>The blog page should be simple, with only the necessary navigation and search tools.</li> <li>It should update quickly on GitHub.</li> <li>It should be lightweight, requiring little programming, and allowing me to focus on writing.</li> </ol> <p>After trying several tools, I finally chose MkDocs, because it meets all the above needs. Next comes my MkDocs configuration guide and usage notes!</p>"},{"location":"en/SOP/MkDocs/#1-setting-up-mkdocs-on-macos","title":"1. Setting Up MkDocs on macOS","text":"<p>(1) Install Python &amp; MkDocs</p> <p>If Python3 is not installed, first install Homebrew:</p> <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre> <p>Install Python3 and pip:</p> <pre><code>brew install python3\n</code></pre> <p>Install MkDocs:</p> <pre><code>pip install mkdocs\n</code></pre> <p>Recommended: install the popular and elegant Material theme:</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>(2) Create Your First MkDocs Project</p> <p>Go to the folder where you want to write your blog:</p> <pre><code>mkdocs new my-blog\ncd my-blog\n</code></pre> <p>This generates a basic structure:</p> <pre><code>my-blog/\n  mkdocs.yml      # configuration file\n  docs/\n    index.md      # homepage content\n</code></pre> <p>(3) Local Preview</p> <p>Run the following in the project root:</p> <pre><code>mkdocs serve\n</code></pre> <p>Then open <code>http://127.0.0.1:8000</code> in your browser to preview in real time.</p> <p>(4) Upload to GitHub and Enable GitHub Pages</p> <p>Initialize Git:</p> <pre><code>git init\ngit add .\ngit commit -m \"first mkdocs blog\"\ngit branch -M main\ngit remote add origin git@github.com:ZihanNing/my-blog.git\n</code></pre> <p>Deploy to GitHub Pages:</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>After deployment, GitHub Pages will automatically build and host your site. You can confirm the published address under Settings \u2192 Pages in your repository. For future updates, just run <code>mkdocs gh-deploy</code> and your site will be online in seconds.</p>"},{"location":"en/SOP/MkDocs/#2-adding-search-and-language-switch-in-mkdocs","title":"2. Adding Search and Language Switch in MkDocs","text":"<p>(1) Search Function</p> <p>The Material theme comes with search functionality. Ensure your <code>mkdocs.yml</code> includes:</p> <pre><code>plugins:\n  - search\n</code></pre> <p>This will add a search box in the top right corner.</p> <p>(2) Multilingual Support (i18n Plugin)</p> <p>Install the plugin:</p> <pre><code>pip install mkdocs-static-i18n\n</code></pre> <p>Configure <code>mkdocs.yml</code>:</p> <pre><code>plugins:\n  - search\n  - i18n:\n      docs_structure: suffix\n      reconfigure_material: true        # enable Material\u2019s language switcher\n      fallback_to_default: true         # show Chinese if English is missing\n      languages:\n        - locale: zh\n          name: \u4e2d\u6587\n          default: true\n        - locale: en\n          name: English\n</code></pre> <p>Then create two files in the <code>docs/</code> directory:</p> <pre><code>index.zh.md\nindex.en.md\n</code></pre> <p>When visiting the page, a language switcher (\u4e2d\u6587/English) will automatically appear in the top-right corner.</p> <p>\u2728 Now you have a lightweight blogging system that supports both English/Chinese switching and search. To update, simply add new markdown files under <code>docs/</code> and run:</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>Your GitHub Pages site will be updated instantly.</p>"},{"location":"en/SOP/MkDocs/#3-common-sop","title":"3. Common SOP","text":""},{"location":"en/SOP/MkDocs/#a-add-a-new-article","title":"A. Add a New Article","text":"<ol> <li>Create new Markdown files under <code>docs/</code>:</li> </ol> <p><pre><code>touch docs/tutorial1.zh.md\ntouch docs/tutorial1.en.md\n</code></pre> 2. Add links to <code>nav</code> in <code>mkdocs.yml</code>:</p> <p><pre><code>nav:\n  - Home: index.md\n  - Tutorials:\n      - \u6559\u7a0b\u4e00: tutorial1.zh.md\n      - Tutorial 1: tutorial1.en.md\n</code></pre> 3. Save, then preview or publish.</p>"},{"location":"en/SOP/MkDocs/#b-local-debugging","title":"B. Local Debugging","text":"<p>\u26a0\ufe0f If MkDocs/plugins were installed inside <code>.venv</code>, activate it first.</p> <ol> <li>Activate virtual environment:</li> </ol> <p><pre><code>source .venv/bin/activate\n</code></pre> 2. Preview locally:</p> <p><pre><code>mkdocs serve\n</code></pre> 3. Open <code>http://127.0.0.1:8000</code>.</p> <p>Exit:</p> <pre><code>deactivate\n</code></pre>"},{"location":"en/SOP/MkDocs/#c-one-click-deployment","title":"C. One-Click Deployment","text":"<ol> <li>Activate <code>.venv</code> (if used):</li> </ol> <p><pre><code>source .venv/bin/activate\n</code></pre> 2. Deploy:</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>Site updates on GitHub Pages within seconds.</p>"},{"location":"en/SOP/MkDocs/#d-branch-workflow-for-deployment","title":"D. Branch Workflow for Deployment","text":"<p>If you work in a feature branch (e.g. <code>docs/bloch_simulation</code>):</p> <ol> <li>Commit changes on feature branch:</li> </ol> <p><pre><code>git checkout docs/bloch_simulation\ngit add .\ngit commit -m \"update bloch simulation docs\"\ngit push origin docs/bloch_simulation\n</code></pre> 2. Merge into main:</p> <p><pre><code>git checkout main\ngit pull origin main\ngit merge docs/bloch_simulation\ngit push origin main\n</code></pre> 3. Deploy from main:</p> <pre><code>mkdocs gh-deploy\n</code></pre>"},{"location":"en/SOP/MkDocs/#e-deployment-troubleshooting","title":"E. Deployment Troubleshooting","text":"<p>If you see \u274c GitHub Actions failures (while <code>gh-deploy</code> succeeds):</p> <ol> <li>List workflows:</li> </ol> <p><pre><code>ls -R .github/workflows\n</code></pre> 2. Remove the unnecessary deploy workflow:</p> <p><pre><code>git rm .github/workflows/&lt;filename&gt;.yml\ngit commit -m \"remove GitHub Actions deploy workflow\"\ngit push origin main\n</code></pre> 3. Make sure Settings \u2192 Pages \u2192 Source is set to <code>gh-pages</code>. 4. Deploy again:</p> <pre><code>mkdocs gh-deploy\n</code></pre>"},{"location":"en/SOP/tmux/","title":"\ud83d\udda5\ufe0f tmux \u2013 Keep your terminal running even after disconnect \ud83d\ude80","text":""},{"location":"en/SOP/tmux/#when-to-use","title":"When to use \ud83c\udf1f","text":"<p>Do you often need to:</p> <ul> <li>Run long-time jobs on a remote server (e.g. model training, simulations, or a Gadgetron client)?</li> <li>Worry that closing your laptop / losing SSH will kill your job?</li> <li>Want to detach and re-attach your session from different places?</li> </ul> <p>Then tmux is your friend! It lets you run tasks in a \u201cvirtual terminal\u201d that survives even after you disconnect.</p>"},{"location":"en/SOP/tmux/#background","title":"Background","text":"<p>I maintain our hospital\u2019s inline reconstruction platform, mainly based on Gadgetron. We\u2019ve developed and ported multiple reconstruction algorithms on this platform (see my framework here).</p> <p>One key application is the head motion correction algorithm, which is regularly used in the TwinsUK Project (every Wednesday and Thursday, \\~16 participants per week).</p> <p>To keep everything stable, maintenance staff need to:</p> <ul> <li>\u2705 Make sure the Gadgetron client is activated on the server every week</li> <li>\u2705 Access the Gadgetron server log at any time</li> </ul> <p>Since I often work from home, I need a reliable way to keep the client running even if I close my laptop or drop the SSH connection. The solution: tmux!</p>"},{"location":"en/SOP/tmux/#step-1-connect-to-the-gadgetron-server","title":"Step 1. Connect to the Gadgetron server","text":"<p>Because the server is inside the hospital\u2019s intranet, I can\u2019t SSH directly \u2014 I need to go through a bouncer (jump host).</p> <p>First, from my Macbook Air:</p> <pre><code>ssh -L 4003:&lt;gadgetron_server_ID&gt;:4000 &lt;user&gt;@bouncer.&lt;bouncer_address&gt;\n</code></pre> <ul> <li><code>-L</code> sets up port forwarding (here mapping local port 4003 \u2192 server port 4000).</li> </ul> <p>Then, from inside the bouncer, I SSH into the Gadgetron server:</p> <pre><code>ssh gadgetron@&lt;gadgetron_server_ID&gt;\n</code></pre>"},{"location":"en/SOP/tmux/#step-2-start-gadgetron-client-inside-a-tmux-session","title":"Step 2. Start Gadgetron client inside a tmux session","text":"<p>If I just run the client in the SSH session, it will stop as soon as I disconnect. Solution: run it inside tmux, which keeps it alive in the background.</p> <p>Create a new tmux session (name it, e.g. <code>gadgetron_client</code>):</p> <pre><code>tmux new -s &lt;session_name&gt;\n</code></pre> <p>Inside the session, start the client (I use my helper script):</p> <pre><code>./activate_gadgetron.sh\n</code></pre> <p>\ud83d\udc49 This script starts the Gadgetron client on port 9002 and keeps it running.</p> <p>To detach (let it run in the background):</p> <pre><code>Ctrl+b then d\n</code></pre> <p>Even if you close your laptop or end SSH, the process keeps running!</p>"},{"location":"en/SOP/tmux/#step-3-re-attach-later","title":"Step 3. Re-attach later","text":"<p>To get back to the session:</p> <pre><code>tmux attach -t &lt;session_name&gt;\n</code></pre> <p>Forgot the name? List sessions first:</p> <pre><code>tmux ls\n</code></pre>"},{"location":"en/SOP/tmux/#common-pitfalls-tips","title":"\u26a1 Common pitfalls &amp; tips","text":"<ul> <li> <p>Forgot the session name?   Use <code>tmux ls</code> to list them.</p> </li> <li> <p>Session crashed but still exists?   Kill it and restart:</p> </li> </ul> <pre><code>tmux kill-session -t &lt;session_name&gt;\n</code></pre> <ul> <li> <p>Too many sessions?   Clean them up with <code>tmux kill-session</code> or by pruning unused ones.</p> </li> <li> <p>Port already in use (9002)?   Check with:</p> </li> </ul> <pre><code>lsof -i:9002\n</code></pre> <p>Then stop the blocking process.</p> <ul> <li>Quick log check \ud83d\udcdc   Instead of opening another terminal, just run:</li> </ul> <pre><code>tail -f log/subcall_log_xxx.txt\n</code></pre> <p>inside your tmux session.</p>"},{"location":"en/SOP/tmux/#wrap-up","title":"\ud83c\udf89 Wrap-up","text":"<p>With <code>tmux</code>, I can run a long-lived Gadgetron client safely on the server, without worrying about SSH disconnects or laptop sleep.</p> <p>This makes WFH much smoother while keeping the TwinsUK inline reconstruction pipeline stable \ud83d\udcaa</p>"},{"location":"en/toolbox/mr_toolbox/","title":"My MR Collections","text":"<p>This is my personal space to store and share brilliant MRI tutorials and source codes. Huge thanks to all contributors! \ud83e\udd73</p>"},{"location":"en/toolbox/mr_toolbox/#tutorials","title":"\ud83d\udcda Tutorials","text":""},{"location":"en/toolbox/mr_toolbox/#1-stanford-rad-229-brilliant-class-on-mri-signal-sequence-design","title":"1. [Stanford] RAD 229: Brilliant Class on MRI Signal &amp; Sequence Design","text":"<p>Stanford University course (Dr. Daniel Ennis &amp; Dr. Brian Hargreaves). Covers everything from the fundamentals of MRI signal formation to advanced sequence design. Includes open-access videos, slides, and code.</p> <ul> <li>Links: [Home Page] [YouTube Videos] [Slides] [GitHub Repo] [My Updated Version]</li> <li>Highlights: MR signal simulation (Bloch/EPG) and excellent coverage of commonly used sequences and their characteristics.</li> </ul>"},{"location":"en/toolbox/mr_toolbox/#2-interactive-book-principles-of-mri","title":"2. Interactive Book: Principles of MRI","text":"<p>A fantastic interactive book with demos and source code to explain MRI physics. Perfect for those who prefer reading over watching lectures.</p> <ul> <li>Links: [Home Page] [Suggestions from README]</li> </ul>"},{"location":"en/toolbox/mr_toolbox/#3-questions-answers-in-mri","title":"3. Questions &amp; Answers in MRI","text":"<p>Probably the most famous MRI Q\\&amp;A site. A true \u201cdictionary\u201d of MRI knowledge.</p> <ul> <li>Links: [Home Page]</li> </ul>"},{"location":"en/toolbox/mr_toolbox/#4-ucsf-bi-201-principles-of-mri","title":"4. [UCSF] BI 201: Principles of MRI","text":"<p>UCSF\u2019s BI 201 lectures (Dr. Peder Larson) \u2014 comprehensive and beginner-friendly, with some introductory reconstruction tutorials.</p> <ul> <li>Links: [YouTube Playlist] [Larson Lab GitHub]</li> </ul>"},{"location":"en/toolbox/mr_toolbox/#5-video-series-introducing-mri","title":"5. Video Series: Introducing MRI","text":"<p>Short, topic-focused videos from Albert Einstein College of Medicine. Each video answers a single question.</p> <ul> <li>Links: [YouTube Playlist]</li> </ul>"},{"location":"en/toolbox/mr_toolbox/#6-two-classic-e-books-on-nmr-mri","title":"6. Two Classic E-Books on NMR &amp; MRI","text":"<p>Dr. Joseph P. Hornak\u2019s well-known e-books \u2014 must-reads for understanding the basics of NMR and MRI.</p> <ul> <li>Links: [Basics of NMR] [Basics of MRI]</li> </ul>"},{"location":"en/toolbox/mr_toolbox/#my-favourite-most-used-toolboxes-software","title":"\ud83d\udee0\ufe0f My Favourite / Most-Used Toolboxes &amp; Software","text":""},{"location":"en/toolbox/mr_toolbox/#1-itk-snap","title":"1. ITK-SNAP","text":"<p>Free, open-source software for segmenting 3D and 4D biomedical images. I use it daily for quick image reviews (NIfTI format).</p> <ul> <li>Links: [Home Page]</li> </ul>"},{"location":"en/toolbox/mr_toolbox/#2-elastix","title":"2. elastix","text":"<p>Open-source toolbox for rigid and non-rigid image registration. I rely on it heavily for brain and kidney image registrations in my projects.</p> <ul> <li>Links: [Home Page] [User Manual] [Model Zoo]</li> </ul>"},{"location":"en/toolbox/mr_toolbox/#3-spm12","title":"3. SPM12","text":"<p>Toolbox for modelling and testing hypotheses about functional imaging data. I use it for brain segmentation, registration, and as a backend for NIfTI I/O in many of my custom tools \u2014 a must-have for MATLAB users.</p> <ul> <li>Links: [Home Page]</li> </ul>"},{"location":"en/toolbox/mr_toolbox/#4-3d-slicer","title":"4. 3D Slicer","text":"<p>Free, open platform for medical image visualization, processing, segmentation, registration, and statistics. Great for manual workflows \u2014 the community constantly contributes new tools.</p> <ul> <li>Links: [Home Page]</li> </ul>"},{"location":"en/toolbox/mr_toolbox/#open-source-code-software","title":"\ud83d\udcbb Open-Source Code &amp; Software","text":""},{"location":"en/toolbox/mr_toolbox/#1-stanford-slr-rf-pulse-design-code","title":"1. Stanford SLR RF Pulse Design Code","text":"<p>MATLAB routines by John Pauly for RF pulse design using the Shinnar-Le Roux algorithm.</p> <ul> <li>Links: [Home Page] [Manual]</li> </ul>"},{"location":"en/toolbox/mr_toolbox/#collections","title":"\ud83c\udf10 Collections","text":""},{"location":"en/toolbox/mr_toolbox/#1-dr-mark-chiews-home-page","title":"1. Dr. Mark Chiew\u2019s Home Page","text":"<p>A model example of a research homepage \u2014 includes open-sourced code, teaching slides, and reconstruction tools.</p> <ul> <li>Links: [Home Page] [Code by Publication] [Teaching Slides] [MR Recon MATLAB Code]</li> <li> <p>Recommended Repos:</p> <ul> <li>recon-tools-matlab \u2014 ADMM, CG, dictionary learning, denoising, and more (MATLAB).</li> </ul> </li> </ul>"},{"location":"en/toolbox/mr_toolbox/#2-mr-hub-ismrm-open-source-tool-collection","title":"2. MR-Hub: ISMRM Open-Source Tool Collection","text":"<p>Maintained by the ISMRM Reproducibility Research Study Group \u2014 features validated, community-approved MR software.</p> <ul> <li>Links: [Home Page]</li> <li> <p>Highlights I\u2019ve Used:</p> <ul> <li>MRtrix3 \u2014 diffusion MRI tools (used for Gibbs ringing removal).</li> <li>BART \u2014 reconstruction toolbox (used for ESPIRiT coil sensitivity estimation).</li> <li>Gadgetron + ISMRMRD \u2014 inline recon platform and data format (used in many of my recon pipelines). [My Practical Inline Recon Framework]</li> <li>KomaMRI \u2014 flexible signal simulation and k-space trajectory plotting.</li> <li>gpuNUFFT \u2014 GPU-accelerated NUFFT solver, MATLAB-friendly (used for sodium imaging recon).</li> </ul> </li> </ul>"},{"location":"en/toolbox/mr_toolbox/#3-nyu-collection-open-source-data-code","title":"3. NYU Collection: Open-Source Data &amp; Code","text":"<p>MRI datasets, reconstruction code, RF simulation tools, and image analysis software from NYU CAI2R.</p> <ul> <li>Links: [Home Page]</li> <li> <p>Highlights:</p> <ul> <li>fastMRI \u2014 large raw k-space dataset for ML research.</li> <li>AGILE \u2014 GPU-accelerated linear/non-linear recon.</li> <li>MPPCA \u2014 diffusion denoising method.</li> <li>gpuNUFFT \u2014 fast non-Cartesian NUFFT.</li> <li>GRASP / RACER-GRASP / XD-GRASP \u2014 popular respiratory motion correction techniques.</li> <li>k-t sparse sense \u2014 dynamic MRI reconstruction code.</li> <li>L+S Recon \u2014 low-rank + sparse dynamic reconstruction (MATLAB).</li> </ul> </li> </ul>"},{"location":"en/toolbox/mr_toolbox/#4-michigan-image-reconstruction-toolbox-mirt","title":"4. Michigan Image Reconstruction Toolbox (MIRT)","text":"<p>MATLAB collection for image reconstruction and RF pulse design, developed by Jeff Fessler.</p> <ul> <li>Links: [Home Page] [Download] [GitHub]</li> <li> <p>Highlights:</p> <ul> <li>Image Reconstruction Toolbox \u2014 GPU-enabled NUFFT, SENSE (Cartesian &amp; non-Cartesian), field map estimation, compressed sensing.</li> <li>RF Pulse Design \u2014 spectral-spatial pulses and phase-precompensated slice selection.</li> </ul> </li> </ul>"},{"location":"en/toolbox/mr_toolbox/#5-ismrm-links-of-interest","title":"5. ISMRM Links of Interest","text":"<p>A comprehensive collection of MR communities, journals, websites, tutorials, and software.</p> <ul> <li>Links: [Home Page]</li> </ul>"}]}